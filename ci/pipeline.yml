---
#@ load("funcs.lib.yml", "slack_hook", "pr_hook")
#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")

#@ env = data.values.env

#! SHARED

#!  JOBS

jobs:
  - name: set-pipeline
    plan:
      - get: src
        params:
          #@ if/end env != 'test':
          depth: 1
          #@ if/end env == 'test':
          integration_tool: checkout
        trigger: true
      - get: pipeline-tasks
      - get: general-task
      - task: boot
        image: general-task
        file: pipeline-tasks/tasks/boot.yml
        params:
          ENV_OVERRIDE: ((deploy-env))
      - set_pipeline: self
        file: compiled/set-pipeline.yml
        instance_vars:
          deploy-env: ((deploy-env))

  - name: test
    plan:
      - get: src
        passed: [set-pipeline]
        trigger: true
        params:
          #@ if/end env != 'test':
          depth: 1
          #@ if/end env == 'test':
          integration_tool: checkout
      #@ if/end env == 'test':
      -  #@ pr_hook("pending", "test")
      - get: node
      - get: general-task
      - task: install-deps
        image: node
        file: src/ci/partials/install-deps.yml

      - in_parallel:
          - task: test
            image: node
            file: src/ci/partials/test.yml

          - task: lint
            image: node
            file: src/ci/partials/lint.yml

    #@ if env == 'test':
    on_failure: #@ pr_hook("failure", "test")
    on_success: #@ pr_hook("success", "test")
    #@ end

  #@ if env == 'deploy':
  - name: deploy
    plan:
      - get: src
        trigger: true
        passed: [set-pipeline, test]
        params: { depth: 1 }

      - get: general-task
      - get: pipeline-tasks

      - task: deploy
        image: general-task
        file: src/ci/partials/deploy.yml
        params:
          _: #@ template.replace(data.values.env_cf_email)
          CF_APP_NAME: pages-mailer

        on_failure:
          try:
            task: cancel-deployment
            image: general-task
            file: pipeline-tasks/tasks/cancel-deployment.yml
            params:
              _: #@ template.replace(data.values.env_cf_email)
              CF_APP_NAME: pages-mailer

    on_failure: #@ slack_hook("failure", "deploy")
    on_success: #@ slack_hook("success", "deploy")

  - name: restage
    plan:
      - get: src
        passed: [set-pipeline]
        params: { depth: 1 }
      - get: general-task
      - get: pipeline-tasks
      - get: nightly
        trigger: true

      - task: restage
        image: general-task
        file: pipeline-tasks/tasks/restage.yml
        params:
          _: #@ template.replace(data.values.env_cf_email)
          CF_APP_NAME: pages-mailer
  #@ end

#!  RESOURCES

resources:
  #@ if/end env == 'test':
  - name: src
    type: pull-request
    check_every: 1m
    source:
      repository: cloud-gov/pages-mailer
      access_token: ((gh-access-token))
      base_branch: main
      disable_forks: true
      ignore_drafts: false

  #@ if env == 'deploy':
  - name: src
    type: git
    icon: github
    source:
      uri: https://github.com/cloud-gov/pages-mailer
      branch: main
      commit_verification_keys: ((cloud-gov-pages-gpg-keys))

  - name: nightly
    type: time
    source:
      start: 12:00 AM
      stop: 1:00 AM
      location: America/New_York

  - name: slack
  #@ end

  - name: pipeline-tasks
  - name: node22
  - name: general-task

#!  RESOURCE TYPES

resource_types:
  - name: git

  - name: registry-image
  #@ if env == 'deploy':
  - name: time
  - name: slack-notification
  #@ end
  #@ if/end env == 'test':
  - name: pull-request
